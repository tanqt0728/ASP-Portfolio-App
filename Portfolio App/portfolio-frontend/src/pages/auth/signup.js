import { useState } from 'react';
import { useAuth } from '../../contexts/AuthContext';
import { useRouter } from 'next/router';

import React from 'react';
import Head from 'next/head';
import Layout from '../../components/Layout';
import PageHeading from "../../components/PageHeading"
import Div from "../../components/Div";
import Spacing from '../../components/Spacing';
import Button from '../../components/Button';

export default function Signup() {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [confirmPassword, setConfirmPassword] = useState('');
  const [error, setError] = useState('');
  const [loading, setLoading] = useState(false); // To prevent multiple submissions
  const { signup } = useAuth();
  const router = useRouter();

  const handleSubmit = async (e) => {
    e.preventDefault();

    if (password !== confirmPassword) {
      setError('Passwords do not match');
      return;
    }

    try {
      setLoading(true);
      const success = await signup(email, password); // Await the promise from signup
      if (success) {
        // Navigate to login page on successful signup
        alert('Sign Up successful! Redirecting...'); // Notify user
        router.push('/auth/login');
      } else {
        // If not successful, setError is already called in signup function with appropriate message
        setLoading(false); // Ensure loading is false
      }
    } catch (error) {
      setError('Failed to create an account. Please try again.');
      setLoading(false); // Ensure we can try again in case of failure
    }
  };

  return (
    <>
      <Head>
        <title>Sign Up - Portfolify </title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        <PageHeading
          bgSrc="/images/search_banner.png"
        />
        <Spacing lg="30" md="20" />
        <Div className="auth-container cs-radius_7">
          <h2>Sign Up</h2>
          {error && <p className="text-red-500 text-xs italic mb-4">{error}</p>}
          <form onSubmit={handleSubmit}>
            <Div className="cs-auth_input_container">
              <label
                htmlFor="email"
              >
                Email
              </label>
              <input
                id="email"
                type="email"
                value={email}
                onChange={(e) => setEmail(e.target.value)}
                placeholder="Email"
                required
                className="cs-auth_input"
              />
            </Div>
            <Div className="cs-auth_input_container">
              <label
                htmlFor="password"
              >
                Password
              </label>
              <input
                id="password"
                type="password"
                value={password}
                onChange={(e) => setPassword(e.target.value)}
                placeholder="Password"
                required
                className="cs-auth_input"
              />
            </Div>
            <Div className="cs-auth_input_container">
              <label
                htmlFor="confirm-password"
              >
                Confirm Password
              </label>
              <input
                id="confirm-password"
                type="password"
                value={confirmPassword}
                onChange={(e) => setConfirmPassword(e.target.value)}
                placeholder="Comfirm password"
                required
                className="cs-auth_input"
              />
            </Div>
            <Div className="cs-auth_button_container">
              <button
                type="submit"
                disabled={loading}
                className="cs-auth_button cs-radius_5"
              >
                {loading ? 'Signing Up...' : 'Sign Up'}
              </button>
            </Div>
          </form>
          <Div className="cs-auth_signup_prompt text-center">
            <p>Already have an account?</p>
            <Button
              btnLink="/auth/login"
              btnText="Login"
              variant="cs-auth_link"
            />
          </Div>
        </Div>
      </Layout >
    </>
    // <div className="flex flex-col items-center justify-center min-h-screen bg-gray-100">
    //   <div className="w-full max-w-xs">
    //     <form onSubmit={handleSubmit} className="bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4">
    //       <h2 className="text-xl font-semibold mb-4">Sign Up</h2>
    //       {error && <p className="text-red-500 text-xs italic mb-4">{error}</p>}
    //       <div className="mb-4">
    //         <label htmlFor="email" className="block text-gray-700 text-sm font-bold mb-2">
    //           Email
    //         </label>
    //         <input
    //           type="email"
    //           id="email"
    //           value={email}
    //           onChange={(e) => setEmail(e.target.value)}
    //           placeholder="Your email"
    //           required
    //           className="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
    //         />
    //       </div>
    //       <div className="mb-4">
    //         <label htmlFor="password" className="block text-gray-700 text-sm font-bold mb-2">
    //           Password
    //         </label>
    //         <input
    //           type="password"
    //           id="password"
    //           value={password}
    //           onChange={(e) => setPassword(e.target.value)}
    //           placeholder="Your password"
    //           required
    //           className="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline"
    //         />
    //       </div>
    //       <div className="mb-6">
    //         <label htmlFor="confirm-password" className="block text-gray-700 text-sm font-bold mb-2">
    //           Confirm Password
    //         </label>
    //         <input
    //           type="password"
    //           id="confirm-password"
    //           value={confirmPassword}
    //           onChange={(e) => setConfirmPassword(e.target.value)}
    //           placeholder="Confirm your password"
    //           required
    //           className="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
    //         />
    //       </div>
    //       <div className="flex items-center justify-between">
    //         <button
    //           type="submit"
    //           disabled={loading}
    //           className="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
    //         >
    //           {loading ? 'Signing Up...' : 'Sign Up'}
    //         </button>
    //       </div>
    //     </form>
    //   </div>
    // </div>
  );
}
